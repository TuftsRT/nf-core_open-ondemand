---
cluster: "tuftshpc"

attributes:

  cpu_partition:
    widget: "select"
    label: "Select cpu partition"
    help: "NOTE: Please do not choose specific lab partitions if you are not a member of that lab."
    value: "batch"
    options:
      - ["batch","batch"]
      - ["largemem", "largemem"]
      - ["preempt", "preempt"]
      - ["patralab", "patralab"]

<%= File.read("/etc/ood/config/apps/dashboard/batch_connect/partials/reservation.yml").indent(2) %>

  workdir:
    label: "Working Directory"
    data-filepicker: true
    data-target-file-type: dirs  # Valid values are: files, dirs, or both
    readonly: false
    help: "Select your project directory; defaults to $HOME"
    
  resume:
    label: resume
    widget: check_box
    checked_value: 1
    unchecked_value: 0
    help: |
           Resume previous run if found

  TOWER_ACCESS_TOKEN:
    widget: "text_field"
    required: false
    label: "TOWER_ACCESS_TOKEN (Optional)"
    help: "Your TOWER_ACCESS_TOKEN used to monitor runs on [Nextflow Tower](https://seqera.io)."


  version:
    label: Version
    widget: select
    options:
      - ['3.1.0', '/cluster/tufts/biocontainers/nf-core/pipelines/nf-core-nanoseq/3.1.0/3_1_0']

  input:
    value: "./samplesheet.csv"
    label: input
    widget: text_field
    help: "Path to comma-separated file containing information about the samples in the experiment."

  protocol:
    label: protocol
    widget: text_field
    help: "Input sample type. Valid options: `DNA`, `cDNA`,  and `directRNA`."

  outdir:
    label: outdir
    widget: text_field
    help: "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure."

  multiqc_title:
    label: multiqc_title
    widget: text_field
    help: "MultiQC report title. Printed as page header, used for filename if not otherwise specified."

  input_path:
    label: input_path
    widget: text_field
    help: "Path to Nanopore run directory files (e.g. `fastq_pass/*`) or a basecalled fastq file that requires demultiplexing."

  barcode_kit:
    label: barcode_kit
    widget: text_field
    help: "Barcode kit used to perform the sequencing e.g. `SQK-PBK004`."

  barcode_both_ends:
    label: barcode_both_ends
    widget: select
    options:
      - ['false', 'false']
      - ['true', 'true']
    help: "Require barcode on both ends for basecaller."

  trim_barcodes:
    label: trim_barcodes
    widget: select
    options:
      - ['false', 'false']
      - ['true', 'true']
    help: "Trim barcodes from the output sequences in the FastQ files from basecaller."

  gpu_device:
    value: "auto"
    label: gpu_device
    widget: text_field
    help: "Device specified in GPU mode using `--device`."

  gpu_cluster_options:
    label: gpu_cluster_options
    widget: text_field
    help: "Cluster options required to use GPU resources (e.g. `--part=gpu --gres=gpu:1`)."

  qcat_min_score:
    value: "60"
    label: qcat_min_score
    widget: text_field
    help: "Specify the minimum quality score for qcat in the range 0-100."

  qcat_detect_middle:
    label: qcat_detect_middle
    widget: select
    options:
      - ['false', 'false']
      - ['true', 'true']
    help: "Search for adapters in the whole read by applying the `--detect-middle` parameter in qcat."

  skip_demultiplexing:
    label: skip_demultiplexing
    widget: select
    options:
      - ['false', 'false']
      - ['true', 'true']
    help: "Skip demultiplexing with qcat."

  run_nanolyse:
    label: run_nanolyse
    widget: select
    options:
      - ['false', 'false']
      - ['true', 'true']
    help: "Filter reads from FastQ files using NanoLyse"

  nanolyse_fasta:
    label: nanolyse_fasta
    widget: text_field
    help: "Fasta file to be filtered against using NanoLyse"

  aligner:
    value: "minimap2"
    label: aligner
    widget: text_field
    help: "Specifies the aligner to use i.e. `minimap2` or `graphmap2`."

  stranded:
    label: stranded
    widget: select
    options:
      - ['false', 'false']
      - ['true', 'true']
    help: "Specifies if the data is strand-specific. Automatically activated when using `--protocol directRNA`."

  save_align_intermeds:
    label: save_align_intermeds
    widget: select
    options:
      - ['false', 'false']
      - ['true', 'true']
    help: "Save the `.sam` files from the alignment step - not done by default."

  skip_alignment:
    label: skip_alignment
    widget: select
    options:
      - ['false', 'false']
      - ['true', 'true']
    help: "Skip alignment and downstream processes."

  call_variants:
    label: call_variants
    widget: select
    options:
      - ['false', 'false']
      - ['true', 'true']
    help: "Specifies if variant calling will executed."

  variant_caller:
    value: "medaka"
    label: variant_caller
    widget: text_field
    help: "Specifies the variant caller that will used to call small variants (available are: medaka, deepvariant, and pepper_margin_deepvariant). Variant calling is only available if `--call_variants` is set and the protocol is set to `DNA`. Please note `deepvariant` and `pepper_margin_deepvariant` are only avaible if using singularity or docker."

  structural_variant_caller:
    value: "sniffles"
    label: structural_variant_caller
    widget: text_field
    help: "Specifies the variant caller that will be used to call structural variants (available are: sniffles and cutesv). Structural variant calling is only available if `--call_variants` is set and the protocol is set to `DNA`."

  split_mnps:
    label: split_mnps
    widget: select
    options:
      - ['false', 'false']
      - ['true', 'true']
    help: "Specifies if MNPs will be split into SNPs when using medaka."

  deepvariant_gpu:
    label: deepvariant_gpu
    widget: select
    options:
      - ['false', 'false']
      - ['true', 'true']
    help: "Specifies whether to call variants with pepper_margin_deepvariant in GPU mode."

  phase_vcf:
    label: phase_vcf
    widget: select
    options:
      - ['false', 'false']
      - ['true', 'true']
    help: "Specifies if vcf will be phased when using medaka."

  skip_vc:
    label: skip_vc
    widget: select
    options:
      - ['false', 'false']
      - ['true', 'true']
    help: "Skip variant calling."

  skip_sv:
    label: skip_sv
    widget: select
    options:
      - ['false', 'false']
      - ['true', 'true']
    help: "Skip structural variant calling."

  quantification_method:
    value: "bambu"
    label: quantification_method
    widget: text_field
    help: "Specifies the transcript quantification method to use (available are: bambu or stringtie2). Only available when protocol is cDNA or directRNA."

  skip_quantification:
    label: skip_quantification
    widget: select
    options:
      - ['false', 'false']
      - ['true', 'true']
    help: "Skip transcript quantification and differential analysis."

  skip_differential_analysis:
    label: skip_differential_analysis
    widget: select
    options:
      - ['false', 'false']
      - ['true', 'true']
    help: "Skip differential analysis with DESeq2 and DEXSeq."

  jaffal_ref_dir:
    value: "for_jaffal"
    label: jaffal_ref_dir
    widget: text_field
    help: "Specifies the reference directory for JAFFAL."

  skip_fusion_analysis:
    label: skip_fusion_analysis
    widget: select
    options:
      - ['false', 'false']
      - ['true', 'true']
    help: "Skip differential analysis with DESeq2 and DEXSeq."

  skip_modification_analysis:
    label: skip_modification_analysis
    widget: select
    options:
      - ['false', 'false']
      - ['true', 'true']
    help: "Skip RNA modification analysis."

  skip_xpore:
    label: skip_xpore
    widget: select
    options:
      - ['false', 'false']
      - ['true', 'true']
    help: "Skip differential modification analysis with xpore."

  skip_m6anet:
    label: skip_m6anet
    widget: select
    options:
      - ['false', 'false']
      - ['true', 'true']
    help: "Skip m6A detection with m6anet."

  skip_bigbed:
    label: skip_bigbed
    widget: select
    options:
      - ['false', 'false']
      - ['true', 'true']
    help: "Skip BigBed file generation."

  skip_bigwig:
    label: skip_bigwig
    widget: select
    options:
      - ['false', 'false']
      - ['true', 'true']
    help: "Skip BigWig file generation."

  skip_nanoplot:
    label: skip_nanoplot
    widget: select
    options:
      - ['false', 'false']
      - ['true', 'true']
    help: "Skip NanoPlot."

  skip_fastqc:
    label: skip_fastqc
    widget: select
    options:
      - ['false', 'false']
      - ['true', 'true']
    help: "Skip FastQC."

  skip_multiqc:
    label: skip_multiqc
    widget: select
    options:
      - ['false', 'false']
      - ['true', 'true']
    help: "Skip MultiQC."

  skip_qc:
    label: skip_qc
    widget: select
    options:
      - ['false', 'false']
      - ['true', 'true']
    help: "Skip all QC steps apart from MultiQC."


form:
  - bc_num_hours
  - cpu_partition
  - reservation
  - version
  - workdir
  - outdir
  - input
  - protocol
  - multiqc_title
  - input_path
  - barcode_kit
  - barcode_both_ends
  - trim_barcodes
  - gpu_device
  - gpu_cluster_options
  - qcat_min_score
  - qcat_detect_middle
  - skip_demultiplexing
  - run_nanolyse
  - nanolyse_fasta
  - aligner
  - stranded
  - save_align_intermeds
  - skip_alignment
  - call_variants
  - variant_caller
  - structural_variant_caller
  - split_mnps
  - deepvariant_gpu
  - phase_vcf
  - skip_vc
  - skip_sv
  - quantification_method
  - skip_quantification
  - skip_differential_analysis
  - jaffal_ref_dir
  - skip_fusion_analysis
  - skip_modification_analysis
  - skip_xpore
  - skip_m6anet
  - skip_bigbed
  - skip_bigwig
  - skip_nanoplot
  - skip_fastqc
  - skip_multiqc
  - skip_qc
  - TOWER_ACCESS_TOKEN
  - resume
